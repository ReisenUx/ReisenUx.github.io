[{"title":"数据结构","date":"2022-02-19T10:48:08.000Z","url":"/2022/02/19/DataStruct/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"]],"categories":[["undefined",""]],"content":"1、替换空格（简单）- 题目大意 实现一个函数，把字符串中的每个空格替换为’%20’ - 示例 略 - 代码 双指针版 - 注意事项上述解法使用了双指针此题注意事项：此处双指针是要从末尾开始数 2、从尾到头打印链表（简单）- 题目大意 输入一个链表的头结点，从尾到头反过来返回每个结点的值（数组返回） - 示例 略 - 代码 栈 - 注意事项用栈即可 递归本质也是用栈实现的，因此递归也是不错的选择 3、用两个栈实现队列（简单）- 描述 用两个栈实现队列，实现 appendTail 和 deleteHead 函数 - 示例 略 - 代码 两个栈实现队列 - 注意事项注意在暴力的基础上想想怎么改进 4、表示数值的字符串（中等）- 描述 一个函数判断字符串是否表示数值（包括整数和小数），整数，小数 - 示例 数值：[“+100”, “5e2”, “-123”, “3.1416”, “-1E-16”, “0123”]非数值：[“12e”, “1a3.14”, “1.2.3”, “+-5”, “12e+5.4”] - 代码 暂无 - 注意事项前置知识：编译原理 5、翻转链表（简单）- 描述 定义一个函数，输入一个链表的头结点，翻转该链表并输出翻转后链表的头结点。 - 示例 略 - 代码 链表遍历 递归 - 注意事项注意递归写法 6、包含min函数的栈（简单）- 题目大意 实现一个栈，栈中能够得到最小元素的min函数，调用min、push及pop的时间复杂度都是O(1) - 示例 略 - 代码 带min的栈 - 注意事项感觉可以注意一下栈空时不能pop和查询啊，标准代码里面并没有 7、复杂链表的复制（简单）- 题目大意 复杂链表的复制，除了next指针指向下一个结点，还有random指针指向随机结点 - 示例 - 代码"},{"title":"Git","date":"2022-02-14T16:17:57.140Z","url":"/2022/02/15/Git/","categories":[["undefined",""]],"content":" 472f0d2124ee617a2f29ff331422d5d3bd292059877923b2bde10f8b4beeb582b5677b97997720bb57b85e0be7567461086ac77154c3b73a123f9a7bd362615b985202fe042ae33378e199941510a256bd119c3f7bd94adfec7da650e928f3eb07c7e884e2c2926cf60d80d96d41147a7feee723b83d1f7b2b19a4cda3c6c4b1cbde4f18c0b820e742620d77c0e341839b114b65dce617bbd7ce6f44f6e393a0da648346fd65a5d49ec00b39e58d5d925ef0fc3a269a5edbe6d03c305189ee3261e43ee03b42068d6aaccc4d563c4d51d14088883f9decdf86ab07117e3a43f6ea70e45e9d9474f4e06b9fc82ed5b8ea89c0d9d4dd1edd56bf84478eceb593cbf513090b909ead96891bc28bc37582bb3e140ec0055ffc608bca9975355f670bcee4217c088ab622ab337a75ca9d6c0849fc18d184d0a3fd0790a04ab44fc7c52e6d6222cf77e554fd34c6979e8fa26d050537ba70e34eb40944dbbc34ae7ceaf01be644e13fdf9a656442f81e1010ca89954448dc749f30d2cf4d1acc3a791a90585cc703fb2725988c4ffc443e568b76d88dcc321b185dd81e42b7fce0170b0fd730ff25a01ba5d78c81888d64739f0ad90a5b640b842797233759ad20d7db45817a96ef7a77d22a93cd17f29f08ac7cba73e32c3c5556a6a5baa8657be52864beea381723456828f61216224879600ce916ae33158e3bcf943824184a212417ac670fcf734d45e556cc228924cbcdaa5daabada6894b646cdfe9f865dc1d353491ce9c90366effd944dc9cc828aa759e394705bf1419281ca2215a414d9f20180030a6a7bf997285845a102c5570aaefa5087c1cea218159f8786a526616e5d555d01121d1131b4da9504421736c99966d4ab153de7a5dd4fa45718f24d1144d6f8ca0f7be4d4a6c4f77457df8caa8229b39eb7dd9170790ac2841ea4a716f17420004f667f016f1f634768abce01345e30437a0a39e88c75bcb4d91802ebdba95177f4baeb946725df6f4688ec6d50699ca2d0237eb0ff7195a6771a21f69d2249c5a585ff70d20d847be1d8233dc4cf24cb991f9e22451f46fe4bfff28245823be09dc331a9ea626cf0ab11153ac4851b2e6a8816c0cd26edb15ea1d9f1b4de8be27fecc2348db94d46d4f65da72f8f27c2e472a07d06ea096a5ee62ac471c702c5bb991e68e8d228f7e13cf390eee339567b8d30c10eee067f30c41cf3d85ffba96332111e54ca126757112b8291a73a7a2e9aea28df33f899ccb088a3c8ab7f2776966d84b8a0c25c6d3bf7593c32ed5f860f2c4e91eb2e43bd3c50dead0f16de13655df6bb9e725fe8afd0d453539d44e4fb9f2b019da99633a6dbfee00517ea4e6a7b26c2d7ef4cd6ba4f7f8be75744e8b594a385bce710aef92650ffeb5b763b8d39c2e3f66c70b0dfe9abe288a2c4b0fd1b52dd37a5e017255f0b31138b4cfada784fe8f8b496e537cb29f861895c5628d4510654ce16365ea876750e0619fc32210de5b3d5a7adea36528cc605c5ac6797226ecdb05250aae623a4698649e87683c90ced7f820c98aebc657e05f77aa4e84e07202bbc657f3b818d6325de048887770516944b0eadc05c548dc130a136f76fa2d1ba3071f10fe02b529e01803cb05ca3ce9333ca62cbab5944221cf49ed1b2734af2f630cf987c53ed7a849482a6b258c439777543d1f4 Hey, password is required here. "},{"title":"Hello World","date":"2022-02-12T08:42:27.602Z","url":"/2022/02/12/hello-world/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"}]